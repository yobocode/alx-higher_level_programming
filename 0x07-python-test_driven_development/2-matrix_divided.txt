'''

# Import the required Function

>>> from importlib import import_module
>>> matrix_divided = import_module('2-matrix_divided').matrix_divided


# Start Testing for valid arguments

>>> matrix_divided([[4, 7]], 2)
[[2.0, 3.5]]
>>> matrix_divided([[4, 7]], 0.25)
[[16.0, 28.0]]
>>> matrix_divided([[12, 7], [21, 23]], 13)
[[0.92, 0.54], [1.62, 1.77]]
>>> matrix_divided([[4, 5], [6, 8]], float('inf'))
[[0.0, 0.0], [0.0, 0.0]]

# Start Testing for Invalid arguments

>>> try:
...    matrix_divided(3, 3)
... except TypeError as e:
...    print(e)
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...    matrix_divided([], 3)
... except TypeError as e:
...    print(e)
Each row of the matrix must have the same size
>>> try:
...    matrix_divided([2, 3], 3)
... except TypeError as e:
...    print(e)
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...    matrix_divided([[]], 3)
... except TypeError as e:
...    print(e)
Each row of the matrix must have the same size
>>> try:
...    matrix_divided([[2,3],[2, 3, 4]], 3)
... except TypeError as e:
...    print(e)
Each row of the matrix must have the same size
>>> try:
...    matrix_divided([['error', 2],[3, 4]], 3)
... except TypeError as e:
...    print(e)
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...    matrix_divided([[2, 3], [3, 2]], 'error')
... except TypeError as e:
...    print(e)
div must be a number
>>> try:
...    matrix_divided([[2, 3], [3, 2]], 0)
... except ZeroDivisionError as e:
...    print(e)
division by zero
>>> try:
...    matrix_divided([[4, 7]])
... except Exception as e:
...    print(e)
matrix_divided() missing 1 required positional argument: 'div'
>>> try:
...    matrix_divided()
... except Exception as e:
...    print(e)
matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

'''
